pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_IMAGE', defaultValue: 'flask-app', description: 'Docker image name')
        string(name: 'DOCKER_TAG', defaultValue: 'latest', description: 'Docker image tag')
    }

    environment {
        APP_PORT = '5000' // Flask app port
        APP_URL = "http://localhost:${APP_PORT}" // URL to access the app
    }

    triggers {
        githubPush() // Automatically trigger on GitHub push
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image...'
                    bat '''
                        docker build -t %DOCKER_IMAGE%:%DOCKER_TAG% .
                    '''
                }
            }
        }

     
        stage('Verify Flask App') {
            steps {
                script {
                    echo 'Verifying if the Flask application is accessible...'
                    retry(12) { // Retry up to 12 times, with a delay between each attempt
                        sleep time: 5, unit: 'SECONDS'
                        def response
                        
                        // Use appropriate command based on the operating system
                        if (isUnix()) {
                            // For Unix/Linux
                            response = sh(script: "curl -s -o /dev/null -w '%{http_code}' ${APP_URL}", returnStdout: true).trim()
                        } else {
                            // For Windows (ensure PowerShell or Command Prompt syntax is correct)
                            response = bat(script: "curl -s -o nul -w %%{http_code} ${APP_URL}", returnStdout: true).trim()
                            // Extract the HTTP status code using regex
                            response = response.replaceAll(".*?([0-9]{3})", "\$1")
                        }
                        
                        echo "HTTP response code: ${response}"
                        
                     
                    }
                    echo "Flask app is successfully running and accessible at ${APP_URL}"
                }
            }
        }
    }

    post {
        success {
            echo 'Deploy pipeline completed successfully!'
        }
        failure {
            echo 'Deploy pipeline failed. Please check the logs for more details.'
            echo 'Showing container logs for debugging...'
            bat "docker logs ${DOCKER_IMAGE}"
        }
    }
}
